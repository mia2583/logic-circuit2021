// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "10/13/2021 22:01:29"

// 
// Device: Altera 5M40ZM64C4 Package MBGA64
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module ControlUnit (
	reset,
	clock,
	star,
	chk,
	sharp,
	cnt,
	ce,
	rw);
input 	reset;
input 	clock;
input 	star;
input 	chk;
input 	sharp;
input 	[1:0] cnt;
output 	ce;
output 	rw;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clock~combout ;
wire \sharp~combout ;
wire \Equal0~0_combout ;
wire \reset~combout ;
wire \reg_fstate.state5~1_combout ;
wire \chk~combout ;
wire \star~combout ;
wire \Selector0~0_combout ;
wire \fstate.state1~regout ;
wire \reg_fstate.state2~0_combout ;
wire \fstate.state2~regout ;
wire \fstate.state3~regout ;
wire \rw~0_combout ;
wire \fstate.state4~regout ;
wire \reg_fstate.state5~0_combout ;
wire \fstate.state5~regout ;
wire \ce~0_combout ;
wire [1:0] \cnt~combout ;


// Location: PIN_E2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \clock~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clock~combout ),
	.padio(clock));
// synopsys translate_off
defparam \clock~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_B2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \sharp~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\sharp~combout ),
	.padio(sharp));
// synopsys translate_off
defparam \sharp~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_F3,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \cnt[1]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\cnt~combout [1]),
	.padio(cnt[1]));
// synopsys translate_off
defparam \cnt[1]~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_H3,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \cnt[0]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\cnt~combout [0]),
	.padio(cnt[0]));
// synopsys translate_off
defparam \cnt[0]~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y1_N2
maxv_lcell \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = (((\cnt~combout [1] & \cnt~combout [0])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\cnt~combout [1]),
	.datad(\cnt~combout [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal0~0 .lut_mask = "f000";
defparam \Equal0~0 .operation_mode = "normal";
defparam \Equal0~0 .output_mode = "comb_only";
defparam \Equal0~0 .register_cascade_mode = "off";
defparam \Equal0~0 .sum_lutc_input = "datac";
defparam \Equal0~0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_A4,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \reset~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\reset~combout ),
	.padio(reset));
// synopsys translate_off
defparam \reset~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y4_N4
maxv_lcell \reg_fstate.state5~1 (
// Equation(s):
// \reg_fstate.state5~1_combout  = (((\reset~combout  & \fstate.state5~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reset~combout ),
	.datad(\fstate.state5~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\reg_fstate.state5~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_fstate.state5~1 .lut_mask = "f000";
defparam \reg_fstate.state5~1 .operation_mode = "normal";
defparam \reg_fstate.state5~1 .output_mode = "comb_only";
defparam \reg_fstate.state5~1 .register_cascade_mode = "off";
defparam \reg_fstate.state5~1 .sum_lutc_input = "datac";
defparam \reg_fstate.state5~1 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_C2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \chk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\chk~combout ),
	.padio(chk));
// synopsys translate_off
defparam \chk~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_B1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \star~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\star~combout ),
	.padio(star));
// synopsys translate_off
defparam \star~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y4_N0
maxv_lcell \Selector0~0 (
// Equation(s):
// \Selector0~0_combout  = (((!\star~combout  & !\fstate.state1~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\star~combout ),
	.datad(\fstate.state1~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Selector0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Selector0~0 .lut_mask = "000f";
defparam \Selector0~0 .operation_mode = "normal";
defparam \Selector0~0 .output_mode = "comb_only";
defparam \Selector0~0 .register_cascade_mode = "off";
defparam \Selector0~0 .sum_lutc_input = "datac";
defparam \Selector0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y4_N1
maxv_lcell \fstate.state1 (
// Equation(s):
// \fstate.state1~regout  = DFFEAS((\reset~combout  & (!\Selector0~0_combout  & ((!\fstate.state5~regout ) # (!\Equal0~0_combout )))), GLOBAL(\clock~combout ), VCC, , , , , , )

	.clk(\clock~combout ),
	.dataa(\Equal0~0_combout ),
	.datab(\reset~combout ),
	.datac(\fstate.state5~regout ),
	.datad(\Selector0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fstate.state1~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \fstate.state1 .lut_mask = "004c";
defparam \fstate.state1 .operation_mode = "normal";
defparam \fstate.state1 .output_mode = "reg_only";
defparam \fstate.state1 .register_cascade_mode = "off";
defparam \fstate.state1 .sum_lutc_input = "datac";
defparam \fstate.state1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y4_N5
maxv_lcell \reg_fstate.state2~0 (
// Equation(s):
// \reg_fstate.state2~0_combout  = (\star~combout  & (((!\chk~combout  & \fstate.state2~regout )) # (!\fstate.state1~regout ))) # (!\star~combout  & (!\chk~combout  & (\fstate.state2~regout )))

	.clk(gnd),
	.dataa(\star~combout ),
	.datab(\chk~combout ),
	.datac(\fstate.state2~regout ),
	.datad(\fstate.state1~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\reg_fstate.state2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_fstate.state2~0 .lut_mask = "30ba";
defparam \reg_fstate.state2~0 .operation_mode = "normal";
defparam \reg_fstate.state2~0 .output_mode = "comb_only";
defparam \reg_fstate.state2~0 .register_cascade_mode = "off";
defparam \reg_fstate.state2~0 .sum_lutc_input = "datac";
defparam \reg_fstate.state2~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y4_N6
maxv_lcell \fstate.state2 (
// Equation(s):
// \fstate.state2~regout  = DFFEAS((\reset~combout  & ((\reg_fstate.state2~0_combout ) # ((!\Equal0~0_combout  & \fstate.state3~regout )))), GLOBAL(\clock~combout ), VCC, , , , , , )

	.clk(\clock~combout ),
	.dataa(\Equal0~0_combout ),
	.datab(\reset~combout ),
	.datac(\fstate.state3~regout ),
	.datad(\reg_fstate.state2~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fstate.state2~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \fstate.state2 .lut_mask = "cc40";
defparam \fstate.state2 .operation_mode = "normal";
defparam \fstate.state2 .output_mode = "reg_only";
defparam \fstate.state2 .register_cascade_mode = "off";
defparam \fstate.state2 .sum_lutc_input = "datac";
defparam \fstate.state2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y4_N9
maxv_lcell \fstate.state3 (
// Equation(s):
// \fstate.state3~regout  = DFFEAS(((\chk~combout  & (\reset~combout  & \fstate.state2~regout ))), GLOBAL(\clock~combout ), VCC, , , , , , )

	.clk(\clock~combout ),
	.dataa(vcc),
	.datab(\chk~combout ),
	.datac(\reset~combout ),
	.datad(\fstate.state2~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fstate.state3~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \fstate.state3 .lut_mask = "c000";
defparam \fstate.state3 .operation_mode = "normal";
defparam \fstate.state3 .output_mode = "reg_only";
defparam \fstate.state3 .register_cascade_mode = "off";
defparam \fstate.state3 .sum_lutc_input = "datac";
defparam \fstate.state3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y4_N2
maxv_lcell \rw~0 (
// Equation(s):
// \rw~0_combout  = (((\reset~combout  & \fstate.state3~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reset~combout ),
	.datad(\fstate.state3~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rw~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rw~0 .lut_mask = "f000";
defparam \rw~0 .operation_mode = "normal";
defparam \rw~0 .output_mode = "comb_only";
defparam \rw~0 .register_cascade_mode = "off";
defparam \rw~0 .sum_lutc_input = "datac";
defparam \rw~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y4_N3
maxv_lcell \fstate.state4 (
// Equation(s):
// \fstate.state4~regout  = DFFEAS((\sharp~combout  & (\Equal0~0_combout  & ((\rw~0_combout )))) # (!\sharp~combout  & ((\reg_fstate.state5~0_combout ) # ((\Equal0~0_combout  & \rw~0_combout )))), GLOBAL(\clock~combout ), VCC, , , , , , )

	.clk(\clock~combout ),
	.dataa(\sharp~combout ),
	.datab(\Equal0~0_combout ),
	.datac(\reg_fstate.state5~0_combout ),
	.datad(\rw~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fstate.state4~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \fstate.state4 .lut_mask = "dc50";
defparam \fstate.state4 .operation_mode = "normal";
defparam \fstate.state4 .output_mode = "reg_only";
defparam \fstate.state4 .register_cascade_mode = "off";
defparam \fstate.state4 .sum_lutc_input = "datac";
defparam \fstate.state4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y4_N7
maxv_lcell \reg_fstate.state5~0 (
// Equation(s):
// \reg_fstate.state5~0_combout  = (((\reset~combout  & \fstate.state4~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reset~combout ),
	.datad(\fstate.state4~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\reg_fstate.state5~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_fstate.state5~0 .lut_mask = "f000";
defparam \reg_fstate.state5~0 .operation_mode = "normal";
defparam \reg_fstate.state5~0 .output_mode = "comb_only";
defparam \reg_fstate.state5~0 .register_cascade_mode = "off";
defparam \reg_fstate.state5~0 .sum_lutc_input = "datac";
defparam \reg_fstate.state5~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y4_N8
maxv_lcell \fstate.state5 (
// Equation(s):
// \fstate.state5~regout  = DFFEAS((\sharp~combout  & ((\reg_fstate.state5~0_combout ) # ((!\Equal0~0_combout  & \reg_fstate.state5~1_combout )))) # (!\sharp~combout  & (!\Equal0~0_combout  & (\reg_fstate.state5~1_combout ))), GLOBAL(\clock~combout ), VCC, , 
// , , , , )

	.clk(\clock~combout ),
	.dataa(\sharp~combout ),
	.datab(\Equal0~0_combout ),
	.datac(\reg_fstate.state5~1_combout ),
	.datad(\reg_fstate.state5~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fstate.state5~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \fstate.state5 .lut_mask = "ba30";
defparam \fstate.state5 .operation_mode = "normal";
defparam \fstate.state5 .output_mode = "reg_only";
defparam \fstate.state5 .register_cascade_mode = "off";
defparam \fstate.state5 .sum_lutc_input = "datac";
defparam \fstate.state5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N1
maxv_lcell \ce~0 (
// Equation(s):
// \ce~0_combout  = ((\reset~combout  & ((\fstate.state5~regout ) # (\fstate.state3~regout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\fstate.state5~regout ),
	.datac(\fstate.state3~regout ),
	.datad(\reset~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\ce~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ce~0 .lut_mask = "fc00";
defparam \ce~0 .operation_mode = "normal";
defparam \ce~0 .output_mode = "comb_only";
defparam \ce~0 .register_cascade_mode = "off";
defparam \ce~0 .sum_lutc_input = "datac";
defparam \ce~0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_A3,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ce~I (
	.datain(\ce~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(ce));
// synopsys translate_off
defparam \ce~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_A1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \rw~I (
	.datain(\rw~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(rw));
// synopsys translate_off
defparam \rw~I .operation_mode = "output";
// synopsys translate_on

endmodule
